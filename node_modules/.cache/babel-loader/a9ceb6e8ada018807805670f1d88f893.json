{"ast":null,"code":"var _jsxFileName = \"/home/motokotik/Documents/Web/todoapp/src/App.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nconsole.clear();\n\nconst Title = ({\n  todoCount\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"to-do (\", todoCount, \")\")));\n};\n\nconst TodoForm = ({\n  addTodo\n}) => {\n  // Input Tracker\n  let input; // Return JSX\n\n  return React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      addTodo(input.value);\n      input.value = '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control col-md-12\",\n    ref: node => {\n      input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nconst Todo = ({\n  todo,\n  remove\n}) => {\n  // Each Todo\n  return React.createElement(\"a\", {\n    href: \"#\",\n    className: \"list-group-item\",\n    onClick: () => {\n      remove(todo.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, todo.text);\n};\n\nconst TodoList = ({\n  todos,\n  remove\n}) => {\n  // Map through the todos\n  const todoNode = todos.map(todo => {\n    return React.createElement(Todo, {\n      todo: todo,\n      key: todo.id,\n      remove: remove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"list-group\",\n    style: {\n      marginTop: '30px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, todoNode);\n}; // Contaner Component\n// Todo Id\n\n\nwindow.id = 0;\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    // Pass props to parent class\n    super(props); // Set initial state\n\n    this.state = {\n      data: []\n    };\n    this.apiUrl = 'https://57b1924b46b57d1100a3c3f8.mockapi.io/api/todos';\n  } // Lifecycle method\n\n\n  componentDidMount() {\n    // Make HTTP reques with Axios\n    axios.get(this.apiUrl).then(res => {\n      // Set state with result\n      this.setState({\n        data: res.data\n      });\n    });\n  } // Add todo handler\n\n\n  addTodo(val) {\n    // Assemble data\n    const todo = {\n      text: val // Update data\n\n    };\n    axios.post(this.apiUrl, todo).then(res => {\n      this.state.data.push(res.data);\n      this.setState({\n        data: this.state.data\n      });\n    });\n  } // Handle remove\n\n\n  handleRemove(id) {\n    // Filter all todos except the one to be removed\n    const remainder = this.state.data.filter(todo => {\n      if (todo.id !== id) return todo;\n    }); // Update state with filter\n\n    axios.delete(this.apiUrl + '/' + id).then(res => {\n      this.setState({\n        data: remainder\n      });\n    });\n  }\n\n  render() {\n    // Render JSX\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Title, {\n      todoCount: this.state.data.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(TodoForm, {\n      addTodo: this.addTodo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todos: this.state.data,\n      remove: this.handleRemove.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(TodoApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}), document.getElementById('container'));\nexport default App;","map":{"version":3,"sources":["/home/motokotik/Documents/Web/todoapp/src/App.js"],"names":["React","render","axios","console","clear","Title","todoCount","TodoForm","addTodo","input","e","preventDefault","value","node","Todo","todo","remove","id","text","TodoList","todos","todoNode","map","marginTop","window","TodoApp","Component","constructor","props","state","data","apiUrl","componentDidMount","get","then","res","setState","val","post","push","handleRemove","remainder","filter","delete","length","bind","document","getElementById","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\n\nconsole.clear();\n\nconst Title = ({todoCount}) => {\n  return (\n    <div>\n       <div>\n          <h1>to-do ({todoCount})</h1>\n       </div>\n    </div>\n  );\n}\n\nconst TodoForm = ({addTodo}) => {\n  // Input Tracker\n  let input;\n  // Return JSX\n  return (\n    <form onSubmit={(e) => {\n        e.preventDefault();\n        addTodo(input.value);\n        input.value = '';\n      }}>\n      <input className=\"form-control col-md-12\" ref={node => {\n        input = node;\n      }} />\n      <br />\n    </form>\n  );\n};\n\nconst Todo = ({todo, remove}) => {\n  // Each Todo\n  return (<a href=\"#\" className=\"list-group-item\" onClick={() => {remove(todo.id)}}>{todo.text}</a>);\n}\n\nconst TodoList = ({todos, remove}) => {\n  // Map through the todos\n  const todoNode = todos.map((todo) => {\n    return (<Todo todo={todo} key={todo.id} remove={remove}/>)\n  });\n  return (<div className=\"list-group\" style={{marginTop:'30px'}}>{todoNode}</div>);\n}\n\n// Contaner Component\n// Todo Id\nwindow.id = 0;\nclass TodoApp extends React.Component{\n  constructor(props){\n    // Pass props to parent class\n    super(props);\n    // Set initial state\n    this.state = {\n      data: []\n    }\n    this.apiUrl = 'https://57b1924b46b57d1100a3c3f8.mockapi.io/api/todos'\n  }\n  // Lifecycle method\n  componentDidMount(){\n    // Make HTTP reques with Axios\n    axios.get(this.apiUrl)\n      .then((res) => {\n        // Set state with result\n        this.setState({data:res.data});\n      });\n  }\n  // Add todo handler\n  addTodo(val){\n    // Assemble data\n    const todo = {text: val}\n    // Update data\n    axios.post(this.apiUrl, todo)\n       .then((res) => {\n          this.state.data.push(res.data);\n          this.setState({data: this.state.data});\n       });\n  }\n  // Handle remove\n  handleRemove(id){\n    // Filter all todos except the one to be removed\n    const remainder = this.state.data.filter((todo) => {\n      if(todo.id !== id) return todo;\n    });\n    // Update state with filter\n    axios.delete(this.apiUrl+'/'+id)\n      .then((res) => {\n        this.setState({data: remainder});\n      })\n  }\n\n  render(){\n    // Render JSX\n    return (\n      <div>\n        <Title todoCount={this.state.data.length}/>\n        <TodoForm addTodo={this.addTodo.bind(this)}/>\n        <TodoList\n          todos={this.state.data}\n          remove={this.handleRemove.bind(this)}\n        />\n      </div>\n    );\n  }\n}\nrender(<TodoApp />, document.getElementById('container'));\nexport default App; "]},"metadata":{},"sourceType":"module"}