{"ast":null,"code":"var _jsxFileName = \"/home/motokotik/Documents/git/todoapp/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nconsole.clear();\n\nconst Title = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"to-do\")));\n};\n\nconst TodoForm = ({\n  addTodo\n}) => {\n  // Input tracker\n  let input;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: node => {\n      input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      addTodo(input.value);\n      input.value = '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"+\"));\n};\n\nconst Todo = ({\n  todo,\n  remove\n}) => {\n  // Each Todo\n  return React.createElement(\"li\", {\n    onClick: \"remove(todo.id)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"(\", todo.text, \")\");\n};\n\nconst TodoList = ({\n  todos,\n  remove\n}) => {\n  // Map through the todos\n  const todoNode = todos.map(todo => {\n    return React.createElement(Todo, {\n      todo: todo,\n      key: todo.id,\n      remove: remove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, todoNode);\n}; // Contaner Component\n// Contaner Component\n// Todo Id\n\n\nwindow.id = 0;\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    // Pass props to parent class\n    super(props); // Set initial state\n\n    this.state = {\n      data: []\n    };\n  } // Add todo handler\n\n\n  addTodo(val) {\n    // Assemble data\n    const todo = {\n      text: val,\n      id: window.id++ // Update data\n\n    };\n    this.state.data.push(todo); // Update state\n\n    this.setState({\n      data: this.state.data\n    });\n  } // Handle remove\n\n\n  handleRemove(id) {\n    // Filter all todos except the one to be removed\n    const remainder = this.state.data.filter(todo => {\n      if (todo.id !== id) return todo;\n    }); // Update state with filter\n\n    this.setState({\n      data: remainder\n    });\n  }\n\n  render() {\n    // Render JSX\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(TodoForm, {\n      addTodo: this.addTodo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todos: this.state.data,\n      remove: this.handleRemove.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(TodoApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}), document.getElementById('container'));","map":{"version":3,"sources":["/home/motokotik/Documents/git/todoapp/src/index.js"],"names":["React","render","axios","console","clear","Title","TodoForm","addTodo","input","node","value","Todo","todo","remove","text","TodoList","todos","todoNode","map","id","window","TodoApp","Component","constructor","props","state","data","val","push","setState","handleRemove","remainder","filter","bind","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nconsole.clear();\n\nconst Title = () => {\n  return (\n    <div>\n       <div>\n          <h1>to-do</h1>\n       </div>\n    </div>\n  );\n}\n\nconst TodoForm = ({addTodo}) => {\n  // Input tracker\n  let input;\n\n  return (\n    <div>\n      <input ref={node => {\n        input = node;\n      }} />\n      <button onClick={() => {\n        addTodo(input.value);\n        input.value = '';\n      }}>\n        +\n      </button>\n    </div>\n  );\n};\n\nconst Todo = ({todo, remove}) => {\n  // Each Todo\n  return (<li onClick=\"remove(todo.id)\">({todo.text})</li>);\n}\n\nconst TodoList = ({todos, remove}) => {\n  // Map through the todos\n  const todoNode = todos.map((todo) => {\n    return (<Todo todo={todo} key={todo.id} remove={remove}/>)\n  });\n  return (<ul>{todoNode}</ul>);\n}\n\n\n\n// Contaner Component\n// Contaner Component\n// Todo Id\nwindow.id = 0;\nclass TodoApp extends React.Component{\n  constructor(props){\n    // Pass props to parent class\n    super(props);\n    // Set initial state\n    this.state = {\n      data: []\n    }\n  }\n  // Add todo handler\n  addTodo(val){\n    // Assemble data\n    const todo = {text: val, id: window.id++}\n    // Update data\n    this.state.data.push(todo);\n    // Update state\n    this.setState({data: this.state.data});\n  }\n  // Handle remove\n  handleRemove(id){\n    // Filter all todos except the one to be removed\n    const remainder = this.state.data.filter((todo) => {\n      if(todo.id !== id) return todo;\n    });\n    // Update state with filter\n    this.setState({data: remainder});\n  }\n\n  render(){\n    // Render JSX\n    return (\n      <div>\n        <Title />\n        <TodoForm addTodo={this.addTodo.bind(this)}/>\n        <TodoList \n          todos={this.state.data} \n          remove={this.handleRemove.bind(this)}\n        />\n      </div>\n    );\n  }\n}\nReactDOM.render(<TodoApp />, document.getElementById('container'));"]},"metadata":{},"sourceType":"module"}