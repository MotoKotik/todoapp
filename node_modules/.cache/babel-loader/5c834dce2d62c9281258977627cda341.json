{"ast":null,"code":"var _jsxFileName = \"/home/motokotik/Documents/git/todoapp/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nconsole.clear();\n\nconst Title = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"to-do\")));\n};\n\nconst TodoForm = ({\n  addTodo\n}) => {\n  // Input tracker\n  let input;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: node => {\n      input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      addTodo(input.value);\n      input.value = '';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"+\"));\n};\n\nconst Todo = ({\n  todo,\n  remove\n}) => {\n  // Each Todo\n  return React.createElement(\"p\", {\n    onClick: \"remove(todo.id)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, todo.text);\n};\n\nconst TodoList = ({\n  todos,\n  remove,\n  complete\n}) => {\n  // Map through the todos\n  const todoNode = todos.map(todo => {\n    return React.createElement(Todo, {\n      todo: todo,\n      key: todo.id,\n      remove: remove,\n      complete: complete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, todoNode);\n}; // Contaner Component\n// Contaner Component\n// Todo Id\n\n\nwindow.id = 0;\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    // Pass props to parent class\n    super(props); // Set initial state\n\n    this.state = {\n      data: []\n    };\n  } // Add todo handler\n\n\n  addTodo(val) {\n    // Assemble data\n    const todo = {\n      text: val,\n      id: window.id++,\n      completed: false // Update data\n\n    };\n    this.state.data.push(todo); // Update state\n\n    this.setState({\n      data: this.state.data\n    });\n  } // Handle remove\n\n\n  handleRemove(id) {\n    // Filter all todos except the one to be removed\n    const remainder = this.state.data.filter(todo => {\n      if (todo.id !== id) return todo;\n    }); // Update state with filter\n\n    this.setState({\n      data: remainder\n    });\n  }\n\n  handleComplete(id) {\n    this.state.data.getElementById(id).completed = true;\n    this.setState({\n      data: this.state.data\n    });\n  }\n\n  render() {\n    // Render JSX\n    var todoClass = this.state.data.completed ? \"done\" : \"undone\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(TodoForm, {\n      addTodo: this.addTodo.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todos: this.state.data,\n      remove: this.handleRemove.bind(this),\n      complete: this.handleComplete.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(TodoApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), document.getElementById('container'));","map":{"version":3,"sources":["/home/motokotik/Documents/git/todoapp/src/index.js"],"names":["React","render","axios","console","clear","Title","TodoForm","addTodo","input","node","value","Todo","todo","remove","text","TodoList","todos","complete","todoNode","map","id","window","TodoApp","Component","constructor","props","state","data","val","completed","push","setState","handleRemove","remainder","filter","handleComplete","getElementById","todoClass","bind","document"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nconsole.clear();\n\nconst Title = () => {\n  return (\n    <div>\n       <div>\n          <h1>to-do</h1>\n       </div>\n    </div>\n  );\n}\n\nconst TodoForm = ({addTodo}) => {\n  // Input tracker\n  let input;\n\n  return (\n    <div>\n      <input ref={node => {\n        input = node;\n      }} />\n      <button onClick={() => {\n        addTodo(input.value);\n        input.value = '';\n      }}>\n        +\n      </button>\n    </div>\n  );\n};\n\nconst Todo = ({todo, remove}) => {\n  // Each Todo\n  return (<p onClick=\"remove(todo.id)\">{todo.text}</p>);\n}\n\nconst TodoList = ({todos, remove, complete}) => {\n  // Map through the todos\n  const todoNode = todos.map((todo) => {\n    return (<Todo todo={todo} key={todo.id} remove={remove} complete={complete}/>)\n  });\n  return (<div>{todoNode}</div>);\n}\n\n\n\n// Contaner Component\n// Contaner Component\n// Todo Id\nwindow.id = 0;\nclass TodoApp extends React.Component{\n  constructor(props){\n    // Pass props to parent class\n    super(props);\n    // Set initial state\n    this.state = {\n      data: []\n    }\n  }\n  // Add todo handler\n  addTodo(val){\n    // Assemble data\n    const todo = {text: val, id: window.id++, completed: false}\n    // Update data\n    this.state.data.push(todo);\n    // Update state\n    this.setState({data: this.state.data});\n  }\n  // Handle remove\n  handleRemove(id){\n    // Filter all todos except the one to be removed\n    const remainder = this.state.data.filter((todo) => {\n      if(todo.id !== id) return todo;\n    });\n    // Update state with filter\n    this.setState({data: remainder});\n  }\n  handleComplete(id){\n    this.state.data.getElementById(id).completed = true;\n    this.setState({data: this.state.data});\n  }\n\n  render(){\n    // Render JSX\n    var todoClass = this.state.data.completed ? \"done\" : \"undone\";\n    return (\n      <div>\n        <Title />\n        <TodoForm addTodo={this.addTodo.bind(this)}/>\n        <TodoList \n          todos={this.state.data} \n          remove={this.handleRemove.bind(this)}\n          complete={this.handleComplete.bind(this)}\n        />\n      </div>\n    );\n  }\n}\nrender(<TodoApp />, document.getElementById('container'));"]},"metadata":{},"sourceType":"module"}